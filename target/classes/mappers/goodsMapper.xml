<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaweb11S.dao.GoodsDAO">
	<select id="goodsTotRecCnt" resultType="int">
		<if test="brand_Idx == '' and mainCategory_Idx == '' and subCategory_Idx == '' and secondCategory_Idx == ''">
			SELECT count(*) FROM goods
		</if>
		<if test="brand_Idx != '' and mainCategory_Idx == '' and subCategory_Idx == '' and secondCategory_Idx == ''">
			SELECT count(*) FROM goods WHERE brand_idx = #{brand_Idx};
		</if>
		<if test="brand_Idx != '' and mainCategory_Idx != '' and subCategory_Idx == '' and secondCategory_Idx == ''">
			SELECT COUNT(*)
			FROM maincategory
			JOIN subcategory ON maincategory.Category_Idx = subcategory.category_idx
			JOIN secondcategory ON subcategory.subCategory_Idx = secondcategory.subcategory_idx
			JOIN goods ON secondcategory.secondCategory_Idx = goods.secondcategory_idx
			JOIN brand ON brand.idx = goods.brand_idx
			WHERE maincategory.Category_Idx = #{mainCategory_Idx} AND goods.brand_idx = #{brand_Idx};
		</if>
		<if test="brand_Idx != '' and mainCategory_Idx != '' and subCategory_Idx != '' and secondCategory_Idx == ''">
			SELECT COUNT(*)
			FROM subcategory
			JOIN secondcategory ON subcategory.subCategory_Idx = secondcategory.subcategory_idx
			JOIN goods ON secondcategory.secondCategory_Idx = goods.secondcategory_idx
			WHERE subcategory.subCategory_Idx = #{subCategory_Idx} AND goods.brand_idx = #{brand_Idx};
		</if>
		<if test="brand_Idx != '' and mainCategory_Idx != '' and subCategory_Idx != '' and secondCategory_Idx != ''">
			SELECT COUNT(*)
			FROM secondCategory
			JOIN goods ON secondCategory.secondCategory_Idx = goods.secondcategory_idx
			WHERE secondCategory.secondCategory_Idx = #{secondCategory_Idx} AND goods.brand_idx = #{brand_Idx};
		</if>
		<if test="brand_Idx == '' and mainCategory_Idx != '' and subCategory_Idx == '' and secondCategory_Idx == ''">
			SELECT COUNT(*)
			FROM maincategory
			JOIN subcategory ON maincategory.Category_Idx = subcategory.category_idx
			JOIN secondcategory ON subcategory.subCategory_Idx = secondcategory.subcategory_idx
			JOIN goods ON secondcategory.secondCategory_Idx = goods.secondcategory_idx
			JOIN brand ON brand.idx = goods.brand_idx
			WHERE maincategory.Category_Idx = #{mainCategory_Idx};
		</if>
		<if test="brand_Idx == '' and mainCategory_Idx != '' and subCategory_Idx != '' and secondCategory_Idx == ''">
			SELECT COUNT(*)
			FROM subcategory
			JOIN secondcategory ON subcategory.subCategory_Idx = secondcategory.subcategory_idx
			JOIN goods ON secondcategory.secondCategory_Idx = goods.secondcategory_idx
			WHERE subcategory.subCategory_Idx = #{subCategory_Idx};
		</if>
		<if test="brand_Idx == '' and mainCategory_Idx != '' and subCategory_Idx != '' and secondCategory_Idx != ''">
			SELECT COUNT(*)
			FROM secondCategory
			JOIN goods ON secondCategory.secondCategory_Idx = goods.secondcategory_idx
			WHERE secondCategory.secondCategory_Idx = #{secondCategory_Idx};
		</if>
	</select>
	
	<select id="getGoodsList" resultType="com.spring.javaweb11S.vo.GoodsVO">
		<if test="pageVO.brand_Idx == '' and pageVO.mainCategory_Idx == '' and pageVO.subCategory_Idx == '' and pageVO.secondCategory_Idx == ''">
			SELECT goods.*, brand.name AS brand_Name 
			FROM goods 
			JOIN brand ON goods.brand_idx = brand.idx
			ORDER BY idx DESC LIMIT #{pageVO.startIndexNo}, #{pageVO.pageSize};
		</if>
		<if test="pageVO.brand_Idx != '' and pageVO.mainCategory_Idx == '' and pageVO.subCategory_Idx == '' and pageVO.secondCategory_Idx == ''">
			SELECT goods.*, brand.name AS brand_Name
			FROM goods
			JOIN brand ON goods.brand_idx = brand.idx
			WHERE goods.brand_idx = #{pageVO.brand_Idx}
			ORDER BY idx DESC LIMIT #{pageVO.startIndexNo}, #{pageVO.pageSize};
		</if>
		<if test="pageVO.brand_Idx != '' and pageVO.mainCategory_Idx != '' and pageVO.subCategory_Idx == '' and pageVO.secondCategory_Idx == ''">
			SELECT goods.*, brand.name AS brand_Name
			FROM maincategory
			JOIN subcategory ON maincategory.Category_Idx = subcategory.category_idx
			JOIN secondcategory ON subcategory.subCategory_Idx = secondcategory.subcategory_idx
			JOIN goods ON secondcategory.secondCategory_Idx = goods.secondcategory_idx
			JOIN brand ON brand.idx = goods.brand_idx
			WHERE maincategory.Category_Idx = #{pageVO.mainCategory_Idx} AND goods.brand_idx = #{pageVO.brand_Idx}
			ORDER BY idx DESC LIMIT #{pageVO.startIndexNo}, #{pageVO.pageSize};
		</if>
		<if test="pageVO.brand_Idx != '' and pageVO.mainCategory_Idx != '' and pageVO.subCategory_Idx != '' and pageVO.secondCategory_Idx == ''">
			SELECT goods.*, brand.name AS brand_Name
			FROM subcategory
			JOIN secondcategory ON subcategory.subCategory_Idx = secondcategory.subcategory_idx
			JOIN goods ON secondcategory.secondCategory_Idx = goods.secondcategory_idx
			JOIN brand ON brand.idx = goods.brand_idx
			WHERE subcategory.subCategory_Idx = #{pageVO.subCategory_Idx} AND goods.brand_idx = #{pageVO.brand_Idx}
			ORDER BY idx DESC LIMIT #{pageVO.startIndexNo}, #{pageVO.pageSize};
		</if>
		<if test="pageVO.brand_Idx != '' and pageVO.mainCategory_Idx != '' and pageVO.subCategory_Idx != '' and pageVO.secondCategory_Idx != ''">
			SELECT goods.*, brand.name AS brand_Name
			FROM secondCategory
			JOIN goods ON secondCategory.secondCategory_Idx = goods.secondcategory_idx
			JOIN brand ON brand.idx = goods.brand_idx
			WHERE secondCategory.secondCategory_Idx = #{pageVO.secondCategory_Idx} AND goods.brand_idx = #{pageVO.brand_Idx}
			ORDER BY idx DESC LIMIT #{pageVO.startIndexNo}, #{pageVO.pageSize};
		</if>
		<if test="pageVO.brand_Idx == '' and pageVO.mainCategory_Idx != '' and pageVO.subCategory_Idx == '' and pageVO.secondCategory_Idx == ''">
			SELECT goods.*, brand.name AS brand_Name
			FROM maincategory
			JOIN subcategory ON maincategory.Category_Idx = subcategory.category_idx
			JOIN secondcategory ON subcategory.subCategory_Idx = secondcategory.subcategory_idx
			JOIN goods ON secondcategory.secondCategory_Idx = goods.secondcategory_idx
			JOIN brand ON brand.idx = goods.brand_idx
			WHERE maincategory.Category_Idx = #{pageVO.mainCategory_Idx}
			ORDER BY idx DESC LIMIT #{pageVO.startIndexNo}, #{pageVO.pageSize};
		</if>
		<if test="pageVO.brand_Idx == '' and pageVO.mainCategory_Idx != '' and pageVO.subCategory_Idx != '' and pageVO.secondCategory_Idx == ''">
			SELECT goods.*, brand.name AS brand_Name
			FROM subcategory
			JOIN secondcategory ON subcategory.subCategory_Idx = secondcategory.subcategory_idx
			JOIN goods ON secondcategory.secondCategory_Idx = goods.secondcategory_idx
			JOIN brand ON brand.idx = goods.brand_idx
			WHERE subcategory.subCategory_Idx = #{pageVO.subCategory_Idx}
			ORDER BY idx DESC LIMIT #{pageVO.startIndexNo}, #{pageVO.pageSize};
		</if>
		<if test="pageVO.brand_Idx == '' and pageVO.mainCategory_Idx != '' and pageVO.subCategory_Idx != '' and pageVO.secondCategory_Idx != ''">
			SELECT goods.*, brand.name AS brand_Name
			FROM secondCategory
			JOIN goods ON secondCategory.secondCategory_Idx = goods.secondcategory_idx
			JOIN brand ON brand.idx = goods.brand_idx
			WHERE secondCategory.secondCategory_Idx = #{pageVO.secondCategory_Idx}
			ORDER BY idx DESC LIMIT #{pageVO.startIndexNo}, #{pageVO.pageSize};
		</if>
	</select>
	
	<select id="reviewTotRecCnt" resultType="int">
		SELECT count(*) FROM review WHERE goods_idx = #{goods_Idx};
	</select>
	
	<!-- <select id="getGoodsList" resultType="com.spring.javaweb11S.vo.GoodsVO">
		SELECT goods.idx, goods.name, goods.price, goods.Thumbnail, goods.goods_like, goods.secondcategory_idx, brand.name as brand_Name
		FROM goods
		JOIN brand ON goods.brand_idx = brand.idx;
	</select> -->
	
	<select id="getGoodsDetail" resultType="com.spring.javaweb11S.vo.GoodsVO">
		SELECT goods.idx, goods.brand_idx, goods.name, goods.price, goods.Thumbnail, goods.goods_like, goods.secondcategory_idx, brand.name as brand_Name
		FROM goods
		JOIN brand ON goods.brand_idx = brand.idx
		WHERE goods.idx = #{goods_Idx};
	</select>
	
	<select id="getGoodsStock" resultType="com.spring.javaweb11S.vo.Goods_StockVO">
		SELECT gs.goods_idx, gs.option_idx, gs.stock, go.goods_option
		FROM goods_stock gs
		JOIN goods_option go ON gs.option_idx = go.option_idx
		WHERE gs.goods_idx=#{goods_Idx};
	</select>
	
	<select id="getMainCateArrayList" resultType="com.spring.javaweb11S.vo.MainCategoryVO">
		SELECT * FROM maincategory;
	</select>
	
	<select id="getSubCateArrayList" resultType="com.spring.javaweb11S.vo.SubCategoryVO">
		SELECT sc.subcategory_idx, sc.subcategory_name, m.category_Name AS mainCategory_Name, m.category_idx AS mainCategory_Idx
		FROM subCategory sc
		JOIN maincategory m ON m.category_idx = sc.category_idx
		WHERE sc.category_idx = #{mainCategory};
	</select>
	
	<select id="getSecondCateArrayList" resultType="com.spring.javaweb11S.vo.SecondCategoryVO">
		SELECT scc.secondcategory_idx, scc.secondcategory_name, sc.subCategory_Name AS subCategory_Name, sc.subCategory_idx AS subCategory_Idx, m.category_Name AS mainCategory_Name, m.category_idx AS mainCategory_Idx
		FROM secondcategory scc
		JOIN subCategory sc ON sc.subcategory_idx = scc.subcategory_idx
		JOIN mainCategory m ON m.category_idx = sc.category_idx
		WHERE scc.subcategory_idx = #{subCategory};
	</select>
	
	<select id="getGoodsCategory" resultType="com.spring.javaweb11S.vo.CategoryVO">
		SELECT mc.category_idx, sc.subcategory_idx, scc.secondcategory_idx, mc.category_name, sc.subcategory_name,  scc.secondcategory_name
		FROM secondcategory scc
		JOIN subcategory sc ON sc.subcategory_idx = scc.subcategory_idx
		JOIN maincategory mc ON mc.category_idx = sc.category_idx
		where scc.secondCategory_Idx = #{secondCategory_Idx};
	</select>
	
	<select id="getOrderMemberInfo" resultType="com.spring.javaweb11S.vo.MemberVO">
		SELECT * FROM member WHERE idx = #{sIdx};
	</select>
	
	<select id="getMemberCouponList" resultType="com.spring.javaweb11S.vo.CouponVO">
		SELECT * FROM coupon where member_idx = #{sIdx};	
	</select>
	
	<select id="getBrandList" resultType="com.spring.javaweb11S.vo.BrandVO">
		SELECT * FROM brand;
	</select>
	
	<select id="getBrandContent" resultType="com.spring.javaweb11S.vo.BrandVO">
		SELECT b.idx, b.name, b.content, b.brand_like
		FROM goods g
		JOIN brand b ON b.idx = g.brand_idx
		WHERE g.idx = #{goods_Idx};
	</select>
	
	<select id="getGoodsTableList" resultType="com.spring.javaweb11S.vo.GoodsVO">
		SELECT goods.idx, goods.name, goods.price, goods.Thumbnail, goods.goods_like, goods.secondcategory_idx, brand.name as brand_Name
		FROM goods
		JOIN brand ON goods.brand_idx = brand.idx;
	</select>
	
	<select id="getGoodsStockAJAX" resultType="com.spring.javaweb11S.vo.Goods_StockVO">
		SELECT gs.goods_idx, gs.option_idx, gs.stock, go.goods_option
		FROM goods_stock gs
		JOIN goods_option go ON gs.option_idx = go.option_idx
		WHERE gs.goods_idx = #{goods_Idx};
	</select>
	
	<select id="getMemberShipAddList" resultType="com.spring.javaweb11S.vo.Member_ShippingAddressVO">
		SELECT * FROM member_shippingaddress WHERE member_idx = #{sIdx};
	</select>
	
	<select id="getCartList" resultType="com.spring.javaweb11S.vo.CartVO">
		SELECT cart.idx AS idx, goods.thumbnail AS order_ThumbNail, brand.name AS order_Brand, goods.name AS order_Name, goods_option.goods_option AS order_Option, goods.price AS order_Price,  cart.stock, cart.goods_idx, cart.option_idx, (SELECT stock FROM goods_stock WHERE goods_idx = cart.goods_idx AND option_idx = cart.option_idx) AS goods_Stock
		FROM cart
		JOIN goods ON goods.idx = cart.goods_idx
		JOIN goods_option ON goods_option.option_idx = cart.option_idx
		JOIN brand ON brand.idx = goods.brand_idx
		WHERE cart.member_idx = #{sIdx};
	</select>
	
	<select id="getCart" resultType="com.spring.javaweb11S.vo.OrderVO">
		SELECT cart.idx AS idx, goods.thumbnail AS order_ThumbNail, brand.name AS order_Brand, goods.name AS order_Name, goods_option.goods_option AS order_Option, goods.price AS order_Price,  cart.stock AS order_Stock, cart.goods_idx, cart.option_idx
		FROM cart
		JOIN goods ON goods.idx = cart.goods_idx
		JOIN goods_option ON goods_option.option_idx = cart.option_idx
		JOIN brand ON brand.idx = goods.brand_idx
		WHERE cart.idx = #{cart_Idx};
	</select>
	
	<select id="getIdxOrderHistory_Detail" resultType="com.spring.javaweb11S.vo.OrderHistory_DetailVO">
		SELECT ohd.idx, ohd.orderhistory_idx, oh.shipping_num, oh.orderdate, ohd.status, ohd.goods_idx, ohd.option_idx, ohd.goods_stock, g.thumbnail AS goods_thumbnail, g.name AS goods_name, go.goods_option, b.name AS goods_brand, g.price AS goods_Price, oh.recipient_Name, oh.recipient_telNum, oh.recipient_Address
		FROM orderhistory_detail ohd
		JOIN orderhistory oh ON ohd.orderhistory_idx = oh.idx
		JOIN goods g ON g.idx = ohd.goods_idx
		JOIN goods_option go ON go.option_idx = ohd.option_idx
		JOIN brand b ON b.idx = g.brand_idx
		WHERE ohd.idx = #{idx};
	</select>
	
	<select id="getCartDupliCheck" resultType="int">
		SELECT count(*) FROM cart WHERE goods_Idx = #{vo.goods_Idx} AND option_Idx = #{vo.option_Idx} AND member_Idx = #{member_Idx}; 
	</select>
	
	<select id="getGoodsImages" resultType="com.spring.javaweb11S.vo.Goods_ImageVO">
		SELECT * FROM goods_image WHERE goods_idx = #{goods_Idx};
	</select>
	
	<select id="getOrderHistory_DetailCnt" resultType="int">
		SELECT COUNT(od.idx) as orderhistory_detail_count
		FROM orderhistory oh
		LEFT JOIN orderhistory_detail od ON oh.idx = od.orderhistory_idx
		WHERE oh.idx = #{sOhIdx};
	</select>
	
	<select id="getReviewList" resultType="com.spring.javaweb11S.vo.ReviewVO">
		SELECT r.*, g.name AS goods_Name, b.name AS brand_Name, go.goods_option AS option_Name, m.name AS member_Name, (SELECT count(*) FROM review r2 WHERE r2.goods_idx = 33) AS review_Cnt, m.fsname AS member_File, m.height, m.weight, m.gender AS member_Gender
		FROM review r
		JOIN goods g ON g.idx = r.goods_idx
		JOIN orderHistory_detail oh ON oh.idx = r.orderHistory_detail_idx
		JOIN goods_option go ON go.option_idx = oh.option_idx
		JOIN brand b ON b.idx = g.brand_idx
		JOIN member m ON m.idx = r.member_idx
		WHERE r.goods_idx = #{goods_Idx}
		ORDER BY wdate DESC, r.idx DESC LIMIT #{pageVO.startIndexNo}, #{pageVO.pageSize};;
	</select>
	
	<select id="getBrandVO" resultType="com.spring.javaweb11S.vo.BrandVO">
		SELECT * FROM brand WHERE idx = #{brand_Idx};
	</select>
	
	<select id="getSelectSameMemberAddress" resultType="int">
		SELECT count(*) FROM member_shippingaddress WHERE ship_name = #{vo.recipient_Name} AND ship_telNum = #{vo.recipient_TelNum} AND ship_address = #{vo.recipient_Address};
	</select>
	
	<insert id="setInsertMemberAddress">
		INSERT INTO member_shippingaddress VALUES(default, #{vo.member_Idx}, #{vo.recipient_Name}, #{vo.recipient_TelNum}, #{vo.recipient_Address});
	</insert>
	
	<insert id="setOrderHistory">
		INSERT INTO orderHistory(idx, member_idx, orderdate, finalprice, recipient_name, recipient_telnum, recipient_address) VALUES(default, #{vo.member_Idx}, default, #{vo.finalPrice}, #{vo.recipient_Name}, #{vo.recipient_TelNum}, #{vo.recipient_Address});
	</insert>
	
	<insert id="setOrderHistory_Detail">
		INSERT INTO orderHistory_detail
		VALUES
		<foreach collection="vos" item="item" separator=",">
			(default,(SELECT idx FROM orderHistory ORDER BY idx DESC LIMIT 0, 1) ,#{item.goods_Idx}, #{item.option_Idx}, #{item.order_Stock}, default, default, default)
		</foreach>
		;
	</insert>
	
	<insert id="setInsertExchangeOrderHistory_Detail">
		INSERT INTO orderHistory_detail
		VALUES
		<foreach collection="vos" item="item" separator=",">
			(default,(SELECT idx FROM orderHistory ORDER BY idx DESC LIMIT 0, 1) ,#{item.goods_Idx}, #{item.option_Idx}, #{item.order_Stock}, default, '교환상품', default)
		</foreach>
		;
	</insert>
	
	<insert id="setInsertCart">
		INSERT INTO cart VALUES(default, #{member_Idx}, #{vo.goods_Idx}, #{vo.option_Idx}, #{vo.order_Stock});
	</insert>
	
	<insert id="setRefundGoods">
		INSERT INTO refund
		VALUES(default, #{refundVO.idx}, #{order_Stock}, #{refundVO.reason}, #{refundVO.refundPrice}, default, default);
	</insert>
	
	<insert id="setExchangeGoods">
		INSERT INTO exchange(idx, orderhistory_detail_idx, applicationDate, reason, recipient_Name, recipient_TelNum, recipient_Address, status)
		VALUES(default, #{exchangeVO.idx}, default, #{exchangeVO.reason}, #{exchangeVO.recipient_Name}, #{exchangeVO.recipient_TelNum}, #{exchangeVO.recipient_Address}, default)
	</insert>
	
	<insert id="setExchange_DetailGoods">
		INSERT INTO exchange_detail
		VALUES
		<foreach collection="vos" item="item" separator=",">
			(default,(SELECT idx FROM exchange ORDER BY idx DESC LIMIT 0, 1) ,#{exchange_DetailVO.goods_Idx} ,#{item.option_Idx}, #{item.stock})
		</foreach>
		;
	</insert>
	
	<insert id="setInsertExchangeOrderHistory">
		INSERT INTO orderHistory(idx, member_idx, orderdate, finalprice, recipient_name, recipient_telnum, recipient_address, category) VALUES(default, #{exchangeVO.member_Idx}, default, 6000, #{exchangeVO.recipient_Name}, #{exchangeVO.recipient_TelNum}, #{exchangeVO.recipient_Address}, '교환');
	</insert>
	
	<insert id="setInsertRefundOrderHistory">
		INSERT INTO orderHistory(idx, member_idx, orderdate, finalprice, category) VALUES(default, #{refundVO.member_Idx}, default, #{refundVO.refund_Price}, '환불');
	</insert>
	
	<insert id="setInsertRefundOrderHistory_Detail">
		INSERT INTO orderHistory_detail VALUES(default,(SELECT idx FROM orderHistory ORDER BY idx DESC LIMIT 0, 1) ,#{vo.goods_Idx}, #{vo.option_Idx}, #{vo.order_Stock}, default, '환불상품', default);
	</insert>
	
	<update id="setUpdateCart">
		UPDATE cart
		SET stock = stock + #{vo.order_Stock}
		WHERE goods_Idx = #{vo.goods_Idx} AND option_Idx = #{vo.option_Idx} AND member_Idx = #{member_Idx};
	</update>
	
	<update id="setMinusPoint">
		UPDATE member
		SET point = point - #{usedPoint}
		WHERE idx = #{sIdx};
	</update>
	
	<update id="setPlusPoint">
		UPDATE member
		SET point = point + #{savePoint}
		WHERE idx = #{sIdx};
	</update>
	
	<update id="setUsedCoupon">
		UPDATE coupon
		SET status = true, usedDate = NOW()
		WHERE idx = #{coupon_Idx};
	</update>
	
	<update id="setUpdateOrderHistory_Detail">
		UPDATE orderHistory_detail
		SET goods_Stock = goods_Stock - #{totalStock}
		WHERE idx = #{orderHistory_Detail_Idx};
	</update>

	
	<update id="setUpdateGoodsStock">
		<foreach item="item" collection="vos" separator=";">
	    	UPDATE goods_stock
	    	SET stock = stock - #{item.order_Stock}
	    	WHERE goods_idx = #{item.goods_Idx} AND option_idx = #{item.option_Idx}
	  	</foreach>
	</update>
	
	<update id="setUpdateCartStock">
		<if test="str == 'plus'">
			UPDATE cart
			SET stock = stock + 1
			WHERE idx = #{cart_Idx};
		</if>
		<if test="str == 'minus'">
			UPDATE cart
			SET stock = stock - 1
			WHERE idx = #{cart_Idx};
		</if>
	</update>
	
	<update id="setUpdateOrderHistory">
		UPDATE orderhistory SET finalprice = #{updatePrice} WHERE idx = #{sOhIdx};
	</update>
	
	<update id="">
		UPDATE orderhistory_detail SET stock = stock - #{totalStock} WHERE idx = #{sOhdIdx};
	</update>
	
	<delete id="setDeleteOrderHistory">
		DELETE FROM orderhistory WHERE idx = #{sOhIdx};
	</delete>
	
	<delete id="setDeleteOrderHistory_Detail">
		DELETE FROM orderhistory_detail WHERE idx = #{orderHistory_Detail_Idx};
	</delete>
	
	<delete id="setDeleteCart" parameterType="int[]">
		<foreach item="item" collection="cartArray" separator=";">
			<if test="item != 0">
		    	DELETE FROM cart WHERE idx = #{item}
			</if>
	  	</foreach>
	</delete>
</mapper>